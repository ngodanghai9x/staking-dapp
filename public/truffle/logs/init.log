PS G:\Github Repo\staking-dapp\public\truffle> truffle init

Starting init...
================


Init successful, sweet!

Try our scaffold commands to get started:
  $ truffle create contract YourContractName # scaffold a contract
  $ truffle create test YourTestName         # scaffold a test

http://trufflesuite.com/docs

PS G:\Github Repo\staking-dapp\public\truffle> truffle create contract StakePool
PS G:\Github Repo\staking-dapp\public\truffle> truffle create test StakePool    
PS G:\Github Repo\staking-dapp\public\truffle> truffle create migration StakePool
PS G:\Github Repo\staking-dapp\public\truffle> truffle version
Truffle v5.6.5 (core: 5.6.5)
Ganache v7.5.0
Solidity - 0.8.17 (solc-js)
Node v16.13.1
Web3.js v1.7.4
PS G:\Github Repo\staking-dapp\public\truffle> truffle migrate --compile-all --reset --network ganache

Compiling your contracts...
===========================
> Compiling .\contracts\StakePool.solc-bin. Attempt #1
> Compilation warnings encountered:

    Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
  --> project:/contracts/StakePool.sol:12:3:
   |
12 |   constructor() public {
   |   ^ (Relevant source part starts here and spans across multiple lines).


> Artifacts written to G:\Github Repo\staking-dapp\public\truffle\build\contracts
> Compiled successfully using:
   - solc: 0.8.17+commit.8df45f5f.Emscripten.clang
⠦ Fetching solc version list from solc-bin. Attempt #1
✓ Downloading compiler. Attempt #1.
Starting migrations...
======================
> Network name:    'ganache'
> Network id:      5777
> Block gas limit: 6721975 (0x6691b7)


1668922869_stake_pool.js
========================
⠙ Fetching solc version list from solc-bin. Attempt #1
   Deploying 'StakePool'Attempt #1.
   ---------------------
   > transaction hash:    0xa664537254c0cd2d8a4c90020bd2604554af0753c56a3c69d5b88be68d9ef73f
   > Blocks: 0            Seconds: 0lc-bin. Attempt #1
   > contract address:    0x5c947554e692D2Bd05246EF231E0A4321c488Df2
   > block timestamp:     1668923692
   > account:             0xB9888183a78Cf80e85D881EA0dd305a764759950
   > balance:             99.92277176
   > gas used:            614288 (0x95f90)
   > gas price:           20 gwei
   > value sent:          0 ETH
   > total cost:          0.01228576 ETH

   > Saving artifacts
   -------------------------------------
   > Total cost:          0.01228576 ETH

Summary
=======
> Total deployments:   1
> Final cost:          0.01228576 ETH


PS G:\Github Repo\staking-dapp\public\truffle> truffle console --network ganache
truffle(ganache)> accounts[1]
'0x9c5c6Ab2271Bd8a5356056FB8034f2024B3e12Cb'
truffle(ganache)> StakePool.address
'0x5c947554e692D2Bd05246EF231E0A4321c488Df2'
truffle(ganache)> await web3.utils.fromWei(web3.utils.toBN(await web3.eth.getBalance(accounts[1])), "ether")
'100'
truffle(ganache)> let app = await StakePool.deployed()
undefined
truffle(ganache)> app.getArticle()
Result {
  '0': '0x0000000000000000000000000000000000000000',
  '1': '0x0000000000000000000000000000000000000000',
  '2': '',
  '3': '',
  '4': BN {
    negative: 0,
    words: [ 0, <1 empty item> ],
    length: 1,
    red: null
  },
  _seller: '0x0000000000000000000000000000000000000000',
  _buyer: '0x0000000000000000000000000000000000000000',
  _name: '',
  _description: '',
  _price: BN {
    negative: 0,
    words: [ 0, <1 empty item> ],
    length: 1,
    red: null
  }
}
truffle(ganache)> app.sellArticle("ip 11", "dt cu", 6, {from: accounts[1]})
{
  tx: '0x979efcff823c66fb4d111e524d4d7ad1a6553008220735941c9503f9c35b4bf5',
  receipt: {
    transactionHash: '0x979efcff823c66fb4d111e524d4d7ad1a6553008220735941c9503f9c35b4bf5',
    transactionIndex: 0,
    blockHash: '0x48d3769df927e0cdacd9c6931fae1eaf8ab2c32c484eaf105de9c3e9048dc505',
    blockNumber: 27,
    from: '0x9c5c6ab2271bd8a5356056fb8034f2024b3e12cb',
    to: '0x5c947554e692d2bd05246ef231e0a4321c488df2',
    gasUsed: 114497,
    cumulativeGasUsed: 114497,
    contractAddress: null,
    logs: [ [Object] ],
    status: true,
    logsBloom: '0x
    rawLogs: [ [Object] ]
  },
  logs: [
    {
      logIndex: 0,
      transactionIndex: 0,
      transactionHash: '0x979efcff823c66fb4d111e524d4d7ad1a6553008220735941c9503f9c35b4bf5',
      blockHash: '0x48d3769df927e0cdacd9c6931fae1eaf8ab2c32c484eaf105de9c3e9048dc505',
      blockNumber: 27,
      address: '0x5c947554e692D2Bd05246EF231E0A4321c488Df2',
      type: 'mined',
      id: 'log_c68d4e0b',
      event: 'LogSellArticle',
      args: [Result]
    }
  ]
}
truffle(ganache)> app.getArticle()
Result {
  '0': '0x9c5c6Ab2271Bd8a5356056FB8034f2024B3e12Cb',
  '1': '0x0000000000000000000000000000000000000000',
  '2': 'ip 11',
  '3': 'dt cu',
  '4': BN {
    negative: 0,
    words: [ 6, <1 empty item> ],
    length: 1,
    red: null
  },
  _seller: '0x9c5c6Ab2271Bd8a5356056FB8034f2024B3e12Cb',
  _buyer: '0x0000000000000000000000000000000000000000',
  _name: 'ip 11',
  _description: 'dt cu',
  _price: BN {
    negative: 0,
    words: [ 6, <1 empty item> ],
    length: 1,
    red: null
  }
}
truffle(ganache)> await web3.utils.fromWei(web3.utils.toBN(await web3.eth.getBalance(accounts[1])), "ether")
'99.99771006'
truffle(ganache)>